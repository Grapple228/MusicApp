<UserControl x:Class="Desktop.MVVM.View.RegistrationView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Desktop.MVVM.View"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300"
             Background="Transparent"
             xmlns:viewModel="clr-namespace:Desktop.MVVM.ViewModel"
             d:DataContext="{d:DesignInstance viewModel:RegistrationViewModel}"
             Loaded="RegistrationView_OnLoaded">
    <UserControl.Resources>
        <Style TargetType="{x:Type PasswordBox}">
            <Setter Property="Margin" Value="2"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="4,3,3,3"/>
            <Setter Property="Width" Value="230"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Foreground" Value="{DynamicResource AccentFontColor}"/>
            <Setter Property="SelectionBrush" Value="{DynamicResource SelectionFontColor}"/>
            <Setter Property="CaretBrush" Value="{DynamicResource AccentFontColor}"/>
        </Style>
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Margin" Value="2"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="4,3,3,3"/>
            <Setter Property="Width" Value="230"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Foreground" Value="{DynamicResource AccentFontColor}"/>
            <Setter Property="SelectionBrush" Value="{DynamicResource SelectionFontColor}"/>
            <Setter Property="CaretBrush" Value="{DynamicResource AccentFontColor}"/>
        </Style>
        <Style TargetType="{x:Type Border}" x:Key="BorderStyle">
            <Style.Setters>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Background" Value="{DynamicResource LightColor}"/>
            </Style.Setters>
        </Style>
        <Style TargetType="Label" x:Key="ClickableLabel">
            <Setter Property="Foreground" Value="{DynamicResource FontColor}"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{DynamicResource SelectionFontColor}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,40,0,10">
        <StackPanel>
            <TextBlock Text="Sign Up" FontSize="18" FontWeight="Bold"
                       Foreground="{DynamicResource AccentFontColor}"></TextBlock>
            <Border CornerRadius="10"
                    Background="{DynamicResource LightColor}"
                    Margin="0,5">
                <Border.Style>
                    <Style TargetType="Border" BasedOn="{StaticResource BorderStyle}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsFocused, ElementName=LoginBox}" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource FontColor}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <Grid>
                            <Rectangle StrokeThickness="1"/>
                            <TextBox Name="LoginBox"
                                     TextChanged="LoginBox_OnTextChanged"
                                     KeyDown="LoginBox_OnKeyDown"
                                     Text="{Binding Login, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            </TextBox>
                            <TextBlock IsHitTestVisible="False"
                                       Text="Login"
                                       Foreground="{DynamicResource FontColor}"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       Margin="10,0,0,0">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Text, ElementName=LoginBox}" Value="">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                        <Setter Property="Visibility" Value="Hidden"/>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                    </Border>
            <Border CornerRadius="10"
                            Background="{DynamicResource LightColor}"
                            Margin="0,5">
                <Border.Style>
                    <Style TargetType="Border" BasedOn="{StaticResource BorderStyle}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsFocused, ElementName=EmailBox}" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource FontColor}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <Grid>
                            <Rectangle StrokeThickness="1"/>
                            <TextBox x:Name="EmailBox"
                                     TextChanged="EmailBox_OnTextChanged_OnTextChanged"
                                     KeyDown="EmailBox_OnKeyDownBox_OnKeyDown">
                            </TextBox>
                            <TextBlock IsHitTestVisible="False"
                                       Text="E-Mail"
                                       Foreground="{DynamicResource FontColor}"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       Margin="10,0,0,0">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Text, ElementName=EmailBox}" Value="">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                        <Setter Property="Visibility" Value="Hidden"/>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                    </Border>  
            <Border CornerRadius="10"
                            Background="{DynamicResource LightColor}"
                            Margin="0,5">
                <Border.Style>
                    <Style TargetType="Border" BasedOn="{StaticResource BorderStyle}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsFocused, ElementName=PasswordBox}" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource FontColor}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <Grid>
                            <Rectangle StrokeThickness="1"/>
                            <PasswordBox Name="PasswordBox"
                                         PasswordChanged="PasswordBox_OnPasswordChanged"
                                         KeyDown="PasswordBox_OnKeyDownBox_OnKeyDown">
                            </PasswordBox>
                            <TextBlock IsHitTestVisible="False"
                                       Text="Password"
                                       Foreground="{DynamicResource FontColor}"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       Margin="10,0,0,0">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Password.Length, FallbackValue=0}" Value="0">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                        <Setter Property="Visibility" Value="Hidden"/>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                    </Border>  
            <Label Name="ErrorLabel" Foreground="{DynamicResource AccentFontColor}" Content="{Binding ErrorLabelText, Mode=TwoWay}" 
                   Margin="3,3,0,3" Padding="0"/>
            <Border x:Name="RegisterButton" 
                    BorderThickness="0" 
                    CornerRadius="15"
                    Height="30"
                    Width="90"
                    Margin="0,5"
                    MouseLeftButtonDown="RegisterButton_OnMouseLeftButtonDown">
                <Border.Resources>
                    <Style TargetType="{x:Type Label}">
                        <Setter Property="Foreground" Value="{DynamicResource FontColor}"></Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsMouseOver, ElementName=RegisterButton}" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource AccentFontColor}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Resources>
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="Background" Value="LightGreen"></Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="PaleGreen"></Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <Label Margin="0" Padding="0" 
                       HorizontalAlignment="Center" 
                       VerticalAlignment="Center"
                       Content="Sign Up"
                       FontSize="15">
                </Label>
            </Border>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center"
                        Margin="0,6,0,0">
                <Label Margin="0,0,5,0" Padding="0" 
                       Foreground="{DynamicResource FontColor}"
                       Style="{StaticResource ClickableLabel}" 
                       Content="Already have account?"
                       HorizontalAlignment="Center"/>
                <Label Name="GoToSignUpPage" Margin="0" Padding="0" 
                       Style="{StaticResource ClickableLabel}" 
                       Content="Sign In!"
                       HorizontalAlignment="Center"
                       MouseLeftButtonDown="GoToLogInUpPage_OnMouseLeftButtonDown"/>
            </StackPanel>
        </StackPanel>
    </Grid>
</UserControl>
